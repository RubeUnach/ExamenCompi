
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASINGrightIGUALleftMAYORMENORleftMASMENOSleftMULTDIVleftIPARENRPARENleftILLAVERLLAVEAND ASING BOOLEAN CADENA CHAR COMA DEC DECIMAL DIF DIV DOUBLE ELSE ENTERO FALSE FLOAT FOR ICORCH ID IF IGUAL ILLAVE INC INT IPAREN MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULT NOT OR OUT PRINTL PUNTO PUNTOCOMA RCORCH RLLAVE RPAREN STRING SYSTEM TRUE WHILEprogram : sentsent : if_instrsent : for_instrsent : while_instrsent : printsent : dec_valsent : sing_valsent : dec_arraysent : emptyif_instr : IF IPAREN exp_logic RPAREN ILLAVE sent RLLAVEif_instr : IF IPAREN exp_logic RPAREN ILLAVE sent RLLAVE ELSE ILLAVE sent RLLAVEfor_instr : FOR IPAREN sing_val exp_logic PUNTOCOMA op_idec RPAREN ILLAVE sent RLLAVEwhile_instr : WHILE IPAREN exp_logic RPAREN ILLAVE sent RLLAVEprint : SYSTEM PUNTO OUT PUNTO PRINTL IPAREN valor_cadena RPAREN PUNTOCOMAdec_val : tipo ID rest_dec PUNTOCOMArest_dec : COMA ID rest_decrest_dec : sing_val : ID ASING term PUNTOCOMA sing_val : ID ASING exp_arit PUNTOCOMA dec_array : ICORCH RCORCH ID PUNTOCOMAtipo : INT\n            | FLOAT\n            | CHAR\n            | DOUBLE\n            | BOOLEAN\n            | STRINGexp_logic : exp_relexp_logic : term_boolexp_logic : exp_logic AND exp_logicexp_logic : exp_logic OR exp_logicexp_logic : NOT exp_logicexp_rel : exp_arit op_rel exp_aritexp_rel : exp_rel op_rel termexp_arit : exp_arit MAS term_aritexp_arit : exp_arit MENOS term_aritexp_arit : term_aritterm_arit : term_arit MULT fact_aritterm_arit : term_arit DIV fact_aritterm_arit : fact_aritfact_arit : IPAREN exp_arit RPARENfact_arit : IDfact_arit : ENTEROfact_arit : DECIMALvalor_cadena : CADENAvalor_cadena : CADENA MAS IDvalor_cadena : CADENA MAS ENTEROop_rel : IGUAL\n              | MAYOR\n              | MENOR\n              | DIF\n              | MAYORIGUAL\n              | MENORIGUALterm : fact_arit\n            | term_boolterm_bool : TRUE \n                 | FALSEop_idec : ID INC\n                | ID DEC\n                | DEC ID\n                | INC IDempty : '
    
_lr_action_items = {'IF':([0,80,91,111,114,],[11,11,11,11,11,]),'FOR':([0,80,91,111,114,],[12,12,12,12,12,]),'WHILE':([0,80,91,111,114,],[13,13,13,13,13,]),'SYSTEM':([0,80,91,111,114,],[14,14,14,14,14,]),'ID':([0,15,18,19,20,21,22,23,24,25,26,29,30,31,35,44,48,56,57,58,59,60,61,62,63,64,66,67,68,69,70,76,77,80,90,91,97,98,111,113,114,],[16,28,-21,-22,-23,-24,-25,-26,41,16,41,41,53,41,41,41,75,41,41,41,-47,-48,-49,-50,-51,-52,41,41,41,41,41,-18,-19,16,96,16,105,106,16,117,16,]),'ICORCH':([0,80,91,111,114,],[17,17,17,17,17,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,74,76,77,78,101,107,116,120,121,],[-61,0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-15,-18,-19,-20,-10,-13,-14,-12,-11,]),'INT':([0,80,91,111,114,],[18,18,18,18,18,]),'FLOAT':([0,80,91,111,114,],[19,19,19,19,19,]),'CHAR':([0,80,91,111,114,],[20,20,20,20,20,]),'DOUBLE':([0,80,91,111,114,],[21,21,21,21,21,]),'BOOLEAN':([0,80,91,111,114,],[22,22,22,22,22,]),'STRING':([0,80,91,111,114,],[23,23,23,23,23,]),'RLLAVE':([3,4,5,6,7,8,9,10,74,76,77,78,80,91,94,99,101,107,111,114,115,116,119,120,121,],[-2,-3,-4,-5,-6,-7,-8,-9,-15,-18,-19,-20,-61,-61,101,107,-10,-13,-61,-61,120,-14,121,-12,-11,]),'IPAREN':([11,12,13,24,26,29,31,35,44,56,57,58,59,60,61,62,63,64,66,67,68,69,70,76,77,92,],[24,25,26,31,31,31,31,31,31,31,31,31,-47,-48,-49,-50,-51,-52,31,31,31,31,31,-18,-19,100,]),'PUNTO':([14,46,],[27,73,]),'ASING':([16,],[29,]),'RCORCH':([17,],[30,]),'NOT':([24,26,35,44,56,57,76,77,],[35,35,35,35,35,35,-18,-19,]),'TRUE':([24,26,29,35,44,56,57,58,59,60,61,62,63,64,76,77,],[37,37,37,37,37,37,37,37,-47,-48,-49,-50,-51,-52,-18,-19,]),'FALSE':([24,26,29,35,44,56,57,58,59,60,61,62,63,64,76,77,],[38,38,38,38,38,38,38,38,-47,-48,-49,-50,-51,-52,-18,-19,]),'ENTERO':([24,26,29,31,35,44,56,57,58,59,60,61,62,63,64,66,67,68,69,70,76,77,113,],[42,42,42,42,42,42,42,42,42,-47,-48,-49,-50,-51,-52,42,42,42,42,42,-18,-19,118,]),'DECIMAL':([24,26,29,31,35,44,56,57,58,59,60,61,62,63,64,66,67,68,69,70,76,77,],[43,43,43,43,43,43,43,43,43,-47,-48,-49,-50,-51,-52,43,43,43,43,43,-18,-19,]),'OUT':([27,],[46,]),'COMA':([28,75,],[48,48,]),'PUNTOCOMA':([28,33,34,37,38,39,40,41,42,43,47,49,50,51,52,53,65,71,75,79,81,82,83,84,85,86,87,88,89,93,112,],[-17,-27,-28,-55,-56,-36,-39,-41,-42,-43,74,76,77,-39,-54,78,-31,90,-17,-40,-29,-30,-33,-53,-32,-34,-35,-37,-38,-16,116,]),'RPAREN':([32,33,34,37,38,39,40,41,42,43,45,52,54,65,79,81,82,83,84,85,86,87,88,89,95,103,104,105,106,108,109,117,118,],[55,-27,-28,-55,-56,-36,-39,-41,-42,-43,72,-54,79,-31,-40,-29,-30,-33,-53,-32,-34,-35,-37,-38,102,-57,-58,-60,-59,112,-44,-45,-46,]),'AND':([32,33,34,37,38,39,40,41,42,43,45,52,65,71,79,81,82,83,84,85,86,87,88,89,],[56,-27,-28,-55,-56,-36,-39,-41,-42,-43,56,-54,56,56,-40,56,56,-33,-53,-32,-34,-35,-37,-38,]),'OR':([32,33,34,37,38,39,40,41,42,43,45,52,65,71,79,81,82,83,84,85,86,87,88,89,],[57,-27,-28,-55,-56,-36,-39,-41,-42,-43,57,-54,57,57,-40,57,57,-33,-53,-32,-34,-35,-37,-38,]),'IGUAL':([33,36,37,38,39,40,41,42,43,52,79,83,84,85,86,87,88,89,],[59,59,-55,-56,-36,-39,-41,-42,-43,-54,-40,-33,-53,-32,-34,-35,-37,-38,]),'MAYOR':([33,36,37,38,39,40,41,42,43,52,79,83,84,85,86,87,88,89,],[60,60,-55,-56,-36,-39,-41,-42,-43,-54,-40,-33,-53,-32,-34,-35,-37,-38,]),'MENOR':([33,36,37,38,39,40,41,42,43,52,79,83,84,85,86,87,88,89,],[61,61,-55,-56,-36,-39,-41,-42,-43,-54,-40,-33,-53,-32,-34,-35,-37,-38,]),'DIF':([33,36,37,38,39,40,41,42,43,52,79,83,84,85,86,87,88,89,],[62,62,-55,-56,-36,-39,-41,-42,-43,-54,-40,-33,-53,-32,-34,-35,-37,-38,]),'MAYORIGUAL':([33,36,37,38,39,40,41,42,43,52,79,83,84,85,86,87,88,89,],[63,63,-55,-56,-36,-39,-41,-42,-43,-54,-40,-33,-53,-32,-34,-35,-37,-38,]),'MENORIGUAL':([33,36,37,38,39,40,41,42,43,52,79,83,84,85,86,87,88,89,],[64,64,-55,-56,-36,-39,-41,-42,-43,-54,-40,-33,-53,-32,-34,-35,-37,-38,]),'MAS':([36,39,40,41,42,43,50,51,54,79,85,86,87,88,89,109,],[67,-36,-39,-41,-42,-43,67,-39,67,-40,67,-34,-35,-37,-38,113,]),'MENOS':([36,39,40,41,42,43,50,51,54,79,85,86,87,88,89,],[68,-36,-39,-41,-42,-43,68,-39,68,-40,68,-34,-35,-37,-38,]),'MULT':([39,40,41,42,43,51,79,86,87,88,89,],[69,-39,-41,-42,-43,-39,-40,69,69,-37,-38,]),'DIV':([39,40,41,42,43,51,79,86,87,88,89,],[70,-39,-41,-42,-43,-39,-40,70,70,-37,-38,]),'ILLAVE':([55,72,102,110,],[80,91,111,114,]),'PRINTL':([73,],[92,]),'DEC':([90,96,],[98,104,]),'INC':([90,96,],[97,103,]),'CADENA':([100,],[109,]),'ELSE':([101,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'sent':([0,80,91,111,114,],[2,94,99,115,119,]),'if_instr':([0,80,91,111,114,],[3,3,3,3,3,]),'for_instr':([0,80,91,111,114,],[4,4,4,4,4,]),'while_instr':([0,80,91,111,114,],[5,5,5,5,5,]),'print':([0,80,91,111,114,],[6,6,6,6,6,]),'dec_val':([0,80,91,111,114,],[7,7,7,7,7,]),'sing_val':([0,25,80,91,111,114,],[8,44,8,8,8,8,]),'dec_array':([0,80,91,111,114,],[9,9,9,9,9,]),'empty':([0,80,91,111,114,],[10,10,10,10,10,]),'tipo':([0,80,91,111,114,],[15,15,15,15,15,]),'exp_logic':([24,26,35,44,56,57,],[32,45,65,71,81,82,]),'exp_rel':([24,26,35,44,56,57,],[33,33,33,33,33,33,]),'term_bool':([24,26,29,35,44,56,57,58,],[34,34,52,34,34,34,34,52,]),'exp_arit':([24,26,29,31,35,44,56,57,66,],[36,36,50,54,36,36,36,36,85,]),'term_arit':([24,26,29,31,35,44,56,57,66,67,68,],[39,39,39,39,39,39,39,39,39,86,87,]),'fact_arit':([24,26,29,31,35,44,56,57,58,66,67,68,69,70,],[40,40,51,40,40,40,40,40,84,40,40,40,88,89,]),'rest_dec':([28,75,],[47,93,]),'term':([29,58,],[49,83,]),'op_rel':([33,36,],[58,66,]),'op_idec':([90,],[95,]),'valor_cadena':([100,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sent','program',1,'p_program','sintaxis.py',17),
  ('sent -> if_instr','sent',1,'p_sent_if','sintaxis.py',33),
  ('sent -> for_instr','sent',1,'p_sent_for','sintaxis.py',40),
  ('sent -> while_instr','sent',1,'p_sent_while','sintaxis.py',47),
  ('sent -> print','sent',1,'p_sent_print','sintaxis.py',54),
  ('sent -> dec_val','sent',1,'p_sent_dec_val','sintaxis.py',61),
  ('sent -> sing_val','sent',1,'p_sent_sing_val','sintaxis.py',68),
  ('sent -> dec_array','sent',1,'p_sent_dec_array','sintaxis.py',75),
  ('sent -> empty','sent',1,'p_sent_empty','sintaxis.py',82),
  ('if_instr -> IF IPAREN exp_logic RPAREN ILLAVE sent RLLAVE','if_instr',7,'p_if_instr','sintaxis.py',86),
  ('if_instr -> IF IPAREN exp_logic RPAREN ILLAVE sent RLLAVE ELSE ILLAVE sent RLLAVE','if_instr',11,'p_if_else_instr','sintaxis.py',92),
  ('for_instr -> FOR IPAREN sing_val exp_logic PUNTOCOMA op_idec RPAREN ILLAVE sent RLLAVE','for_instr',10,'p_for_instr','sintaxis.py',97),
  ('while_instr -> WHILE IPAREN exp_logic RPAREN ILLAVE sent RLLAVE','while_instr',7,'p_while_instr','sintaxis.py',102),
  ('print -> SYSTEM PUNTO OUT PUNTO PRINTL IPAREN valor_cadena RPAREN PUNTOCOMA','print',9,'p_print_instr','sintaxis.py',107),
  ('dec_val -> tipo ID rest_dec PUNTOCOMA','dec_val',4,'p_dec_val','sintaxis.py',112),
  ('rest_dec -> COMA ID rest_dec','rest_dec',3,'p_rest_dec_val','sintaxis.py',117),
  ('rest_dec -> <empty>','rest_dec',0,'p_rest_dec_final','sintaxis.py',122),
  ('sing_val -> ID ASING term PUNTOCOMA','sing_val',4,'p_sing_val','sintaxis.py',127),
  ('sing_val -> ID ASING exp_arit PUNTOCOMA','sing_val',4,'p_sing_exp_arit','sintaxis.py',130),
  ('dec_array -> ICORCH RCORCH ID PUNTOCOMA','dec_array',4,'p_dec_array','sintaxis.py',133),
  ('tipo -> INT','tipo',1,'p_tipo','sintaxis.py',136),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintaxis.py',137),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintaxis.py',138),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintaxis.py',139),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintaxis.py',140),
  ('tipo -> STRING','tipo',1,'p_tipo','sintaxis.py',141),
  ('exp_logic -> exp_rel','exp_logic',1,'p_exp_logic','sintaxis.py',146),
  ('exp_logic -> term_bool','exp_logic',1,'p_exp_term','sintaxis.py',151),
  ('exp_logic -> exp_logic AND exp_logic','exp_logic',3,'p_exp_logic_and','sintaxis.py',156),
  ('exp_logic -> exp_logic OR exp_logic','exp_logic',3,'p_exp_logic_or','sintaxis.py',161),
  ('exp_logic -> NOT exp_logic','exp_logic',2,'p_exp_logic_not','sintaxis.py',166),
  ('exp_rel -> exp_arit op_rel exp_arit','exp_rel',3,'p_exp_rel','sintaxis.py',170),
  ('exp_rel -> exp_rel op_rel term','exp_rel',3,'p_exp_rel_term','sintaxis.py',174),
  ('exp_arit -> exp_arit MAS term_arit','exp_arit',3,'p_exp_arit_mas','sintaxis.py',178),
  ('exp_arit -> exp_arit MENOS term_arit','exp_arit',3,'p_exp_arit_menos','sintaxis.py',182),
  ('exp_arit -> term_arit','exp_arit',1,'p_exp_term_arit','sintaxis.py',186),
  ('term_arit -> term_arit MULT fact_arit','term_arit',3,'p_term_arit_mult','sintaxis.py',190),
  ('term_arit -> term_arit DIV fact_arit','term_arit',3,'p_term_arit_div','sintaxis.py',194),
  ('term_arit -> fact_arit','term_arit',1,'p_term_fact','sintaxis.py',198),
  ('fact_arit -> IPAREN exp_arit RPAREN','fact_arit',3,'p_fact_arit_paten','sintaxis.py',202),
  ('fact_arit -> ID','fact_arit',1,'p_fact_arit_id','sintaxis.py',206),
  ('fact_arit -> ENTERO','fact_arit',1,'p_fact_arit_entero','sintaxis.py',210),
  ('fact_arit -> DECIMAL','fact_arit',1,'p_fact_arit','sintaxis.py',214),
  ('valor_cadena -> CADENA','valor_cadena',1,'p_cadena','sintaxis.py',218),
  ('valor_cadena -> CADENA MAS ID','valor_cadena',3,'p_cadena_id','sintaxis.py',223),
  ('valor_cadena -> CADENA MAS ENTERO','valor_cadena',3,'p_cadena_numero','sintaxis.py',228),
  ('op_rel -> IGUAL','op_rel',1,'p_op_rel','sintaxis.py',234),
  ('op_rel -> MAYOR','op_rel',1,'p_op_rel','sintaxis.py',235),
  ('op_rel -> MENOR','op_rel',1,'p_op_rel','sintaxis.py',236),
  ('op_rel -> DIF','op_rel',1,'p_op_rel','sintaxis.py',237),
  ('op_rel -> MAYORIGUAL','op_rel',1,'p_op_rel','sintaxis.py',238),
  ('op_rel -> MENORIGUAL','op_rel',1,'p_op_rel','sintaxis.py',239),
  ('term -> fact_arit','term',1,'p_term','sintaxis.py',243),
  ('term -> term_bool','term',1,'p_term','sintaxis.py',244),
  ('term_bool -> TRUE','term_bool',1,'p_term_bool_true','sintaxis.py',248),
  ('term_bool -> FALSE','term_bool',1,'p_term_bool_true','sintaxis.py',249),
  ('op_idec -> ID INC','op_idec',2,'p_op_inc_dec','sintaxis.py',254),
  ('op_idec -> ID DEC','op_idec',2,'p_op_inc_dec','sintaxis.py',255),
  ('op_idec -> DEC ID','op_idec',2,'p_op_inc_dec','sintaxis.py',256),
  ('op_idec -> INC ID','op_idec',2,'p_op_inc_dec','sintaxis.py',257),
  ('empty -> <empty>','empty',0,'p_empty','sintaxis.py',261),
]
